name: release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  release-tag:
    runs-on: ubuntu-22.04
    steps:
      - name: trigger ui repo tag workflow
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.DISPATCH_PAT }}
          repository: gptscript-ai/ui
          event-type: release
          client-payload: '{"tag": "${{ github.ref_name }}"}'
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          cache: false
          go-version: "1.22"
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: v1.23.0
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_PROJECT_TOKEN: ${{ secrets.GH_PROJECT_TOKEN }}
          GORELEASER_CURRENT_TAG: ${{ github.ref_name }}
  winget-release:
    needs: release-tag
    if: "! contains(github.ref_name, '-rc')"
    runs-on: windows-latest
    steps:
      - name: Install winget-create
        run: |
            Invoke-WebRequest -Uri 'https://aka.ms/wingetcreate/latest' -OutFile 'wingetcreate.exe'      
      - name: Create WinGet Package Update Pull Request
        run: |
            $url = "${{ github.server_url }}/${{ github.repository }}/releases/download/${{ github.ref_name }}/gptscript-${{ github.ref_name }}-windows-amd64.zip"
            ./wingetcreate.exe update --submit --token "${{ secrets.WINGET_GH_TOKEN }}" --urls $url --version "${{ github.ref_name }}" gptscript-ai.gptscript
  node-release:
    needs: release-tag
    runs-on: ubuntu-latest
    steps:
      - name: trigger dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.DISPATCH_PAT }}
          repository: gptscript-ai/node-gptscript
          event-type: release
          client-payload: '{"tag": "${{ github.ref_name }}"}'
  python-release:
    needs: release-tag
    runs-on: ubuntu-latest
    steps:
      - name: trigger dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.DISPATCH_PAT }}
          repository: gptscript-ai/py-gptscript
          event-type: release
          client-payload: '{"tag": "${{ github.ref_name }}"}'
  go-release:
    needs: release-tag
    runs-on: ubuntu-latest
    steps:
      - name: trigger dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.DISPATCH_PAT }}
          repository: gptscript-ai/go-gptscript
          event-type: release
          client-payload: '{"tag": "${{ github.ref_name }}"}'